{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rizwa\\\\OneDrive\\\\Desktop\\\\New_folder\\\\define_2025\\\\test_smart_bin\\\\src\\\\pages\\\\SmartDustbinPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SmartDustbinPage.css\";\nimport { Trash, Plus, X, MapPin, ArrowLeft } from \"lucide-react\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\n// Custom map icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst SmartDustbinPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [notifications, setNotifications] = useState([]);\n  const [newDustbin, setNewDustbin] = useState({\n    location: \"\",\n    bValue: \"\",\n    nbValue: \"\",\n    latitude: null,\n    longitude: null\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([8.5241, 76.9366]); // Default: Trivandrum\n\n  const API_BASE_URL = \"http://127.0.0.1:5050\"; // Update if needed\n\n  // Fetch dustbin data\n  const fetchDustbinData = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/dustbins`);\n      setNotifications(response.data);\n      console.log(\"Fetched Dustbin Data:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching dustbin data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDustbinData();\n    const interval = setInterval(fetchDustbinData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Convert location name to coordinates (with proper headers)\n  const getCoordinates = async location => {\n    try {\n      const response = await axios.get(\"https://nominatim.openstreetmap.org/search\", {\n        params: {\n          q: location + \", Trivandrum, India\",\n          format: \"json\",\n          limit: 1\n        },\n        headers: {\n          \"User-Agent\": \"SmartWasteApp/1.0 (your-email@example.com)\",\n          // Change as needed\n          \"Accept-Language\": \"en\"\n        }\n      });\n      console.log(\"Geocoding API Response:\", response.data);\n      if (response.data.length > 0) {\n        return {\n          lat: parseFloat(response.data[0].lat),\n          lon: parseFloat(response.data[0].lon)\n        };\n      } else {\n        alert(`Location \"${location}\" not found. Try a different name.`);\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error fetching location coordinates:\", error);\n      alert(\"Failed to fetch location coordinates.\");\n      return null;\n    }\n  };\n\n  // Handler for \"Find Location\" button\n  const handleFindLocation = async () => {\n    if (!newDustbin.location.trim()) {\n      alert(\"Please enter a location.\");\n      return;\n    }\n    const coords = await getCoordinates(newDustbin.location);\n    if (coords) {\n      setMapCenter([coords.lat, coords.lon]);\n      // Set initial marker position to the geocoded coordinates\n      setNewDustbin(prev => ({\n        ...prev,\n        latitude: coords.lat,\n        longitude: coords.lon\n      }));\n      console.log(\"New dustbin coordinates set to:\", coords.lat, coords.lon);\n    }\n  };\n\n  // Component to allow user to pin the exact location by clicking on the map\n  const LocationMarker = () => {\n    _s();\n    useMapEvents({\n      click(e) {\n        setNewDustbin(prev => ({\n          ...prev,\n          latitude: e.latlng.lat,\n          longitude: e.latlng.lng\n        }));\n        console.log(\"Pinned coordinates:\", e.latlng.lat, e.latlng.lng);\n      }\n    });\n    return newDustbin.latitude && newDustbin.longitude ? /*#__PURE__*/_jsxDEV(Marker, {\n      position: [newDustbin.latitude, newDustbin.longitude],\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Selected Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  // Handle adding a dustbin with the pinned coordinates\n  _s(LocationMarker, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const handleAddDustbin = async () => {\n    if (!newDustbin.location.trim() || newDustbin.latitude === null || newDustbin.longitude === null) {\n      alert(\"Please enter a location and pin the exact position on the map.\");\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE_URL}/api/add-dustbin`, newDustbin);\n      alert(\"Dustbin added successfully!\");\n      setNewDustbin({\n        location: \"\",\n        bValue: \"\",\n        nbValue: \"\",\n        latitude: null,\n        longitude: null\n      });\n      fetchDustbinData();\n    } catch (error) {\n      console.error(\"Error adding dustbin:\", error);\n      alert(\"Failed to add dustbin.\");\n    }\n  };\n\n  // Show Map for a dustbin from the list\n  const handleShowMap = dustbin => {\n    if (dustbin.latitude && dustbin.longitude) {\n      setSelectedLocation(dustbin);\n      setMapCenter([parseFloat(dustbin.latitude), parseFloat(dustbin.longitude)]);\n      console.log(\"Showing map for dustbin:\", dustbin);\n    } else {\n      alert(\"Location data is missing.\");\n    }\n  };\n\n  // Delete dustbin\n  const handleDeleteDustbin = async location => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/delete-dustbin`, {\n        data: {\n          location\n        }\n      });\n      alert(response.data.message);\n      fetchDustbinData();\n    } catch (error) {\n      console.error(\"Error deleting dustbin:\", error);\n      alert(\"Failed to delete dustbin.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"smart-dustbin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Dustbin Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), selectedLocation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => setSelectedLocation(null),\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), \" Back to List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: 15,\n        style: {\n          height: \"400px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: mapCenter,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: selectedLocation.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-dustbin-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Dustbin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Location Name (e.g., MG Road)\",\n          value: newDustbin.location,\n          onChange: e => setNewDustbin({\n            ...newDustbin,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindLocation,\n          className: \"find-location-button\",\n          children: \"Find Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"B Value\",\n          value: newDustbin.bValue,\n          onChange: e => setNewDustbin({\n            ...newDustbin,\n            bValue: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"NB Value\",\n          value: newDustbin.nbValue,\n          onChange: e => setNewDustbin({\n            ...newDustbin,\n            nbValue: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: 15,\n          style: {\n            height: \"300px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LocationMarker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddDustbin,\n          className: \"add-dustbin-button\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), \" Add Dustbin\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-grid\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: notification.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-values\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value-label\",\n                  children: \"B:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), \" \", notification.bValue]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value-label\",\n                  children: \"NB:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), \" \", notification.nbValue]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"map-button\",\n                onClick: () => handleShowMap(notification),\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), \" Show on Map\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDeleteDustbin(notification.location),\n                children: [/*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, notification._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s2(SmartDustbinPage, \"KIjuvkMz29bLDccZaHpjUy0UPd0=\");\n_c = SmartDustbinPage;\nexport default SmartDustbinPage;\nvar _c;\n$RefreshReg$(_c, \"SmartDustbinPage\");","map":{"version":3,"names":["React","useEffect","useState","Trash","Plus","X","MapPin","ArrowLeft","axios","MapContainer","TileLayer","Marker","Popup","useMapEvents","L","jsxDEV","_jsxDEV","Fragment","_Fragment","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","SmartDustbinPage","_s2","_s","$RefreshSig$","notifications","setNotifications","newDustbin","setNewDustbin","location","bValue","nbValue","latitude","longitude","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","API_BASE_URL","fetchDustbinData","response","get","data","console","log","error","interval","setInterval","clearInterval","getCoordinates","params","q","format","limit","headers","length","lat","parseFloat","lon","alert","handleFindLocation","trim","coords","prev","LocationMarker","click","e","latlng","lng","position","icon","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAddDustbin","post","handleShowMap","dustbin","handleDeleteDustbin","delete","message","className","onClick","size","center","zoom","style","height","width","url","type","placeholder","value","onChange","target","map","notification","_id","_c","$RefreshReg$"],"sources":["C:/Users/rizwa/OneDrive/Desktop/New_folder/define_2025/test_smart_bin/src/pages/SmartDustbinPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./SmartDustbinPage.css\";\r\nimport { Trash, Plus, X, MapPin, ArrowLeft } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\n\r\n// Custom map icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst SmartDustbinPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [newDustbin, setNewDustbin] = useState({\r\n    location: \"\",\r\n    bValue: \"\",\r\n    nbValue: \"\",\r\n    latitude: null,\r\n    longitude: null,\r\n  });\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([8.5241, 76.9366]); // Default: Trivandrum\r\n\r\n  const API_BASE_URL = \"http://127.0.0.1:5050\"; // Update if needed\r\n\r\n  // Fetch dustbin data\r\n  const fetchDustbinData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/api/dustbins`);\r\n      setNotifications(response.data);\r\n      console.log(\"Fetched Dustbin Data:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching dustbin data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDustbinData();\r\n    const interval = setInterval(fetchDustbinData, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Convert location name to coordinates (with proper headers)\r\n  const getCoordinates = async (location) => {\r\n    try {\r\n      const response = await axios.get(\"https://nominatim.openstreetmap.org/search\", {\r\n        params: {\r\n          q: location + \", Trivandrum, India\",\r\n          format: \"json\",\r\n          limit: 1,\r\n        },\r\n        headers: {\r\n          \"User-Agent\": \"SmartWasteApp/1.0 (your-email@example.com)\", // Change as needed\r\n          \"Accept-Language\": \"en\",\r\n        },\r\n      });\r\n\r\n      console.log(\"Geocoding API Response:\", response.data);\r\n\r\n      if (response.data.length > 0) {\r\n        return { lat: parseFloat(response.data[0].lat), lon: parseFloat(response.data[0].lon) };\r\n      } else {\r\n        alert(`Location \"${location}\" not found. Try a different name.`);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching location coordinates:\", error);\r\n      alert(\"Failed to fetch location coordinates.\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Handler for \"Find Location\" button\r\n  const handleFindLocation = async () => {\r\n    if (!newDustbin.location.trim()) {\r\n      alert(\"Please enter a location.\");\r\n      return;\r\n    }\r\n    const coords = await getCoordinates(newDustbin.location);\r\n    if (coords) {\r\n      setMapCenter([coords.lat, coords.lon]);\r\n      // Set initial marker position to the geocoded coordinates\r\n      setNewDustbin((prev) => ({ ...prev, latitude: coords.lat, longitude: coords.lon }));\r\n      console.log(\"New dustbin coordinates set to:\", coords.lat, coords.lon);\r\n    }\r\n  };\r\n\r\n  // Component to allow user to pin the exact location by clicking on the map\r\n  const LocationMarker = () => {\r\n    useMapEvents({\r\n      click(e) {\r\n        setNewDustbin((prev) => ({\r\n          ...prev,\r\n          latitude: e.latlng.lat,\r\n          longitude: e.latlng.lng,\r\n        }));\r\n        console.log(\"Pinned coordinates:\", e.latlng.lat, e.latlng.lng);\r\n      },\r\n    });\r\n    return newDustbin.latitude && newDustbin.longitude ? (\r\n      <Marker position={[newDustbin.latitude, newDustbin.longitude]} icon={customIcon}>\r\n        <Popup>Selected Location</Popup>\r\n      </Marker>\r\n    ) : null;\r\n  };\r\n\r\n  // Handle adding a dustbin with the pinned coordinates\r\n  const handleAddDustbin = async () => {\r\n    if (!newDustbin.location.trim() || newDustbin.latitude === null || newDustbin.longitude === null) {\r\n      alert(\"Please enter a location and pin the exact position on the map.\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/api/add-dustbin`, newDustbin);\r\n      alert(\"Dustbin added successfully!\");\r\n      setNewDustbin({ location: \"\", bValue: \"\", nbValue: \"\", latitude: null, longitude: null });\r\n      fetchDustbinData();\r\n    } catch (error) {\r\n      console.error(\"Error adding dustbin:\", error);\r\n      alert(\"Failed to add dustbin.\");\r\n    }\r\n  };\r\n\r\n  // Show Map for a dustbin from the list\r\n  const handleShowMap = (dustbin) => {\r\n    if (dustbin.latitude && dustbin.longitude) {\r\n      setSelectedLocation(dustbin);\r\n      setMapCenter([parseFloat(dustbin.latitude), parseFloat(dustbin.longitude)]);\r\n      console.log(\"Showing map for dustbin:\", dustbin);\r\n    } else {\r\n      alert(\"Location data is missing.\");\r\n    }\r\n  };\r\n\r\n  // Delete dustbin\r\n  const handleDeleteDustbin = async (location) => {\r\n    try {\r\n      const response = await axios.delete(`${API_BASE_URL}/api/delete-dustbin`, { data: { location } });\r\n      alert(response.data.message);\r\n      fetchDustbinData();\r\n    } catch (error) {\r\n      console.error(\"Error deleting dustbin:\", error);\r\n      alert(\"Failed to delete dustbin.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"smart-dustbin-page\">\r\n      <h1>Smart Dustbin Notifications</h1>\r\n\r\n      {/* Show Map if a dustbin from the list is selected */}\r\n      {selectedLocation ? (\r\n        <div className=\"map-container\">\r\n          <button className=\"back-button\" onClick={() => setSelectedLocation(null)}>\r\n            <ArrowLeft size={20} /> Back to List\r\n          </button>\r\n          <MapContainer center={mapCenter} zoom={15} style={{ height: \"400px\", width: \"100%\" }}>\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Marker position={mapCenter} icon={customIcon}>\r\n              <Popup>{selectedLocation.location}</Popup>\r\n            </Marker>\r\n          </MapContainer>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Add New Dustbin Form with Map for Pinning Location */}\r\n          <div className=\"add-dustbin-section\">\r\n            <h2>Add New Dustbin</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Location Name (e.g., MG Road)\"\r\n              value={newDustbin.location}\r\n              onChange={(e) => setNewDustbin({ ...newDustbin, location: e.target.value })}\r\n            />\r\n            <button onClick={handleFindLocation} className=\"find-location-button\">\r\n              Find Location\r\n            </button>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"B Value\"\r\n              value={newDustbin.bValue}\r\n              onChange={(e) => setNewDustbin({ ...newDustbin, bValue: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"NB Value\"\r\n              value={newDustbin.nbValue}\r\n              onChange={(e) => setNewDustbin({ ...newDustbin, nbValue: e.target.value })}\r\n            />\r\n            <MapContainer center={mapCenter} zoom={15} style={{ height: \"300px\", width: \"100%\" }}>\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n              <LocationMarker />\r\n            </MapContainer>\r\n            <button onClick={handleAddDustbin} className=\"add-dustbin-button\">\r\n              <Plus size={20} /> Add Dustbin\r\n            </button>\r\n          </div>\r\n\r\n          {/* Dustbin List */}\r\n          <div className=\"notification-grid\">\r\n            {notifications.map((notification) => (\r\n              <div key={notification._id} className=\"notification-bar\">\r\n                <div className=\"notification-content\">\r\n                  <h3>{notification.location}</h3>\r\n                  <div className=\"notification-values\">\r\n                    <div className=\"value-item\">\r\n                      <span className=\"value-label\">B:</span> {notification.bValue}\r\n                    </div>\r\n                    <div className=\"value-item\">\r\n                      <span className=\"value-label\">NB:</span> {notification.nbValue}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"notification-buttons\">\r\n                    <button className=\"map-button\" onClick={() => handleShowMap(notification)}>\r\n                      <MapPin size={20} /> Show on Map\r\n                    </button>\r\n                    <button className=\"delete-button\" onClick={() => handleDeleteDustbin(notification.location)}>\r\n                      <X size={20} /> Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartDustbinPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}